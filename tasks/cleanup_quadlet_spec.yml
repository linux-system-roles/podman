---
# NOTE: Stopping, disabling, and removing units should also stop
# and remove any pods and containers as well.
- name: Stat XDG_RUNTIME_DIR
  stat:
    path: "{{ __podman_xdg_runtime_dir }}"
  register: __podman_xdg_stat
  when:
    - __podman_rootless | bool
    - __podman_xdg_runtime_dir | d("") | length > 0

- name: Stop and disable service
  systemd:
    name: "{{ __podman_service_name }}"
    scope: "{{ __podman_systemd_scope }}"
    state: stopped
    enabled: false
    force: true
  become: "{{ __podman_rootless | ternary(true, omit) }}"
  become_user: "{{ __podman_rootless | ternary(__podman_user, omit) }}"
  environment:
    XDG_RUNTIME_DIR: "{{ __podman_xdg_runtime_dir }}"
  register: __podman_service_status
  when:
    - __podman_service_name | length > 0
    - not __podman_rootless or __podman_xdg_stat.stat.exists
  failed_when:
    - __podman_service_status is failed
    - not __podman_service_status.msg is search(__service_error)
  vars:
    __service_error: Could not find the requested service

- name: See if quadlet file exists
  stat:
    path: "{{ __podman_quadlet_file }}"
  register: __podman_network_stat
  when: __podman_quadlet_type == "network"

- name: Get network quadlet network name
  when:
    - __podman_quadlet_type == "network"
    - __podman_network_stat.stat.exists
  block:
    - name: Create tempdir
      tempfile:
        prefix: podman_
        suffix: _lsr.ini
        state: directory
      register: __podman_network_tmpdir
      delegate_to: localhost

    - name: Fetch the network quadlet
      fetch:
        dest: "{{ __podman_network_tmpdir.path }}/network.ini"
        src: "{{ __podman_quadlet_file }}"
        flat: true

    - name: Get the network name
      set_fact:
        __podman_network_name: "{{
          lookup('ini', 'NetworkName section=Network file=' ~
                 __podman_network_tmpdir.path ~ '/network.ini') }}"
  always:
    - name: Remove tempdir
      file:
        path: "{{ __podman_network_tmpdir.path }}"
        state: absent
      delegate_to: localhost

- name: Remove quadlet file
  file:
    path: "{{ __podman_quadlet_file }}"
    state: absent
  register: __podman_file_removed

- name: Manage linger
  include_tasks: manage_linger.yml
  vars:
    __podman_item_state: absent

- name: Cleanup container resources
  when: __podman_file_removed is changed  # noqa no-handler
  block:
    - name: Reload systemctl  # noqa no-handler
      systemd:
        daemon_reload: true
        scope: "{{ __podman_systemd_scope }}"
      become: "{{ __podman_rootless | ternary(true, omit) }}"
      become_user: "{{ __podman_rootless | ternary(__podman_user, omit) }}"
      environment:
        XDG_RUNTIME_DIR: "{{ __podman_xdg_runtime_dir }}"

    - name: Prune images no longer in use
      command: podman image prune -f
      environment:
        XDG_RUNTIME_DIR: "{{ __podman_xdg_runtime_dir }}"
      become: "{{ __podman_rootless | ternary(true, omit) }}"
      become_user: "{{ __podman_rootless | ternary(__podman_user, omit) }}"
      changed_when: true

    - name: Remove network
      command: podman network rm {{ __name | quote }}
      changed_when: true
      when: __podman_quadlet_type == "network"
      environment:
        XDG_RUNTIME_DIR: "{{ __podman_xdg_runtime_dir }}"
      become: "{{ __podman_rootless | ternary(true, omit) }}"
      become_user: "{{ __podman_rootless | ternary(__podman_user, omit) }}"
      vars:
        __name: "{{ __podman_network_name if
          __podman_network_name | d('') | length > 0
          else 'systemd-' ~ __podman_quadlet_name }}"
