# SPDX-License-Identifier: MIT
---
- name: Set platform/version specific variables
  include_tasks: set_vars.yml

- name: Ensure required packages are installed
  package:
    name: "{{ __podman_packages }}"
    state: present

- name: Handle container.conf.d
  include_tasks: handle_container_conf_d.yml

- name: Handle registries.conf.d
  include_tasks: handle_registries_conf_d.yml

- name: Get the mounts from podman_containers
  set_fact:
    __podman_mounts: "{{ podman_containers | selectattr('mount', 'defined') |
      map(attribute='mount') | flatten | select('search', 'type=bind') |
      map('regex_replace', '^.*source=([^,]+).*$', '\\1') | list }}"
    __podman_volumes: "{{ podman_containers | selectattr('volume', 'defined') |
      map(attribute='volume') | flatten |
      map('regex_replace', '^([^:]+).*$', '\\1') | list }}"
  when: podman_create_host_directories

- name: Create host directories
  file: "{{ __defaults | combine(podman_host_directories[__hostitem])
            if __hostitem in podman_host_directories | d({})
            else __defaults }}"
  vars:
    __hostitem: "{{ item if item in podman_host_directories | d({})
      else 'DEFAULT' }}"
    __defaults: "{{ {'path': item} | combine(__podman_hostdirs_defaults) }}"
  loop: "{{ __podman_mounts | union(__podman_volumes) }}"
  when:
    - podman_create_host_directories
    - __podman_mounts or __podman_volumes

# This task should ensure that __podman_containers has only
# parameters valid for containers.podman.podman_container - other
# parameters should be stripped out into separate vars
- name: Manage firewall for specified ports
  include_role:
    name: fedora.linux_system_roles.firewall
  vars:
    firewall: "{{ podman_firewall }}"
  when: podman_firewall | length > 0

- name: Manage selinux for specified ports
  include_role:
    name: fedora.linux_system_roles.selinux
  vars:
    selinux_ports: "{{ podman_selinux_ports }}"
  when: podman_selinux_ports | length > 0

- name: Handle containers
  include_tasks: handle_container.yml
  loop: "{{ podman_containers }}"
  loop_control:
    loop_var: __podman_container_item
