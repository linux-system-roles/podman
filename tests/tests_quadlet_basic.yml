# SPDX-License-Identifier: MIT
---
- name: Ensure that the role can manage quadlet specs
  hosts: all
  vars_files:
    - vars/test_vars.yml
  vars:
    podman_use_copr: false  # disable copr for CI testing
    podman_fail_if_too_old: false
    podman_activate_systemd_unit: false
    podman_secrets:
      - name: mysql_container_root_password
        state: present
        skip_existing: true
        data: the_root_password_vault_encrypted
    podman_quadlet_specs:
      - name: quadlet-basic
        type: network
        Network:
          Subnet: 192.168.29.0/24
          Gateway: 192.168.29.1
          Label: app=wordpress
      - name: quadlet-basic-mysql
        type: volume
        Volume: {}
      - name: quadlet-basic-mysql
        type: container
        activate_systemd_unit: true
        Install:
          WantedBy: default.target
        Container:
          Image: "{{ mysql_image }}"
          ContainerName: quadlet-basic-mysql
          Volume: quadlet-basic-mysql.volume:/var/lib/mysql
          Network: quadlet-basic.network
          # Once 4.5 is released change this line to use the quadlet Secret key
          PodmanArgs: "--secret=mysql_container_root_password,type=env,\
            target=MYSQL_ROOT_PASSWORD"
          Environment:
            - FOO=/bin/busybox-extras
            - BAZ=test
  tasks:
    - name: See if not pulling images fails
      block:
        - name: Run role - do not pull images
          include_role:
            name: linux-system-roles.podman
          vars:
            podman_quadlet_specs:
              - name: nopull
                type: container
                state: created
                pull_image: false
                activate_systemd_unit: false
                Install:
                  WantedBy: default.target
                Container:
                  Image: "{{ test_image }}"
                  ContainerName: nopull

        - name: Verify image not pulled
          assert:
            that: __podman_image_updated.results[0] is skipped

        - name: Run role - try to pull bogus image
          include_role:
            name: linux-system-roles.podman
          vars:
            podman_quadlet_specs:
              - name: bogus
                type: container
                state: created
                continue_if_pull_fails: true
                activate_systemd_unit: false
                Install:
                  WantedBy: default.target
                Container:
                  Image: this_is_a_bogus_image
                  ContainerName: bogus

        - name: Verify image not pulled and no error
          assert:
            that:
              - not __podman_image_updated.results[0] is changed
              - not __podman_image_updated.results[0] is skipped

      always:
        - name: Cleanup
          include_role:
            name: linux-system-roles.podman
          vars:
            podman_quadlet_specs:
              - state: absent
                name: "{{ item }}"
                type: container
          loop:
            - nopull
            - bogus

    - name: Run the role
      include_role:
        name: linux-system-roles.podman

    - name: Check container
      command: cat /etc/containers/systemd/quadlet-basic-mysql.container
      changed_when: false

    - name: Check network
      command: cat /etc/containers/systemd/quadlet-basic.network
      changed_when: false

    - name: Check volume
      command: cat /etc/containers/systemd/quadlet-basic-mysql.volume
      changed_when: false

    - name: Prepare for Cleanup
      set_fact:
        podman_secrets: "{{ podman_secrets | map('combine', __absent) |
          list }}"
        podman_quadlet_specs: "{{ podman_quadlet_specs |
          map('combine', __absent) | list }}"
      vars:
        __absent: {"state":"absent"}

    - name: Cleanup
      include_role:
        name: linux-system-roles.podman
